{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContactmeComponent } from './contactme/contactme.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { AboutComponent } from './about/about.component';\nimport { RouterModule } from '@angular/router';\nimport { ProjectComponent } from './projects/project/project.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/service-worker\";\nconst appRoutes = [{\n  path: '',\n  component: AboutComponent\n}, {\n  path: 'contact',\n  component: ContactmeComponent\n}, {\n  path: 'projects',\n  component: ProjectsComponent\n}, {\n  path: 'projects/:project-name',\n  component: ProjectComponent\n}, {\n  path: '**',\n  component: AboutComponent\n}];\nexport class AppModule {}\nAppModule.ɵfac = function AppModule_Factory(t) {\n  return new (t || AppModule)();\n};\nAppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: AppModule,\n  bootstrap: [AppComponent]\n});\nAppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  imports: [BrowserModule, AppRoutingModule, RouterModule.forRoot(appRoutes), HttpClientModule, FormsModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: environment.production,\n    // Register the ServiceWorker as soon as the app is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, HeaderComponent, ContactmeComponent, ProjectsComponent, AboutComponent, ProjectComponent],\n    imports: [BrowserModule, AppRoutingModule, i1.RouterModule, HttpClientModule, FormsModule, i2.ServiceWorkerModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,aAAa,QAAQ,2BAA2B;AAEzD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,YAAY,QAAgB,iBAAiB;AACtD,SAASC,gBAAgB,QAAQ,sCAAsC;AACvE,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,WAAW,QAAQ,gBAAgB;;;;AAE5C,MAAMC,SAAS,GAAW,CACxB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAET;AAAc,CAAE,EACvC;EAAEQ,IAAI,EAAE,SAAS;EAAEC,SAAS,EAAEX;AAAkB,CAAE,EAClD;EAAEU,IAAI,EAAE,UAAU;EAAEC,SAAS,EAAEV;AAAiB,CAAE,EAClD;EAAES,IAAI,EAAE,wBAAwB;EAAEC,SAAS,EAAEP;AAAgB,CAAE,EAC/D;EAAEM,IAAI,EAAE,IAAI;EAAEC,SAAS,EAAET;AAAc,CAAE,CAC1C;AA2BD,OAAM,MAAOU,SAAS;;mBAATA,SAAS;AAAA;;QAATA,SAAS;EAAAC,YAFRf,YAAY;AAAA;;YAbtBF,aAAa,EACbC,gBAAgB,EAChBM,YAAY,CAACW,OAAO,CAACL,SAAS,CAAC,EAC/BJ,gBAAgB,EAChBG,WAAW,EACXF,mBAAmB,CAACS,QAAQ,CAAC,gBAAgB,EAAE;IAC7CC,OAAO,EAAET,WAAW,CAACU,UAAU;IAC/B;IACA;IACAC,oBAAoB,EAAE;GACvB,CAAC;AAAA;;2EAKON,SAAS;IAAAO,eAvBlBrB,YAAY,EACZC,eAAe,EACfC,kBAAkB,EAClBC,iBAAiB,EACjBC,cAAc,EACdE,gBAAgB;IAAAgB,UAGhBxB,aAAa,EACbC,gBAAgB,mBAEhBQ,gBAAgB,EAChBG,WAAW;EAAA;AAAA","names":["BrowserModule","AppRoutingModule","AppComponent","HeaderComponent","ContactmeComponent","ProjectsComponent","AboutComponent","RouterModule","ProjectComponent","HttpClientModule","ServiceWorkerModule","environment","FormsModule","appRoutes","path","component","AppModule","bootstrap","forRoot","register","enabled","production","registrationStrategy","declarations","imports"],"sourceRoot":"","sources":["/home/alois/portfolio/src/app/app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ContactmeComponent } from './contactme/contactme.component';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { AboutComponent } from './about/about.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProjectComponent } from './projects/project/project.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { FormsModule } from '@angular/forms';\n\nconst appRoutes: Routes = [\n  { path: '', component: AboutComponent },\n  { path: 'contact', component: ContactmeComponent },\n  { path: 'projects', component: ProjectsComponent },\n  { path: 'projects/:project-name', component: ProjectComponent },\n  { path: '**', component: AboutComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ContactmeComponent,\n    ProjectsComponent,\n    AboutComponent,\n    ProjectComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(appRoutes),\n    HttpClientModule,\n    FormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000',\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}